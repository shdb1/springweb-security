<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Configuring RoleVoter bean to use custom access roles, by default roles 
		should be in the form ROLE_{XXX} -->
	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value=""></beans:property>
	</beans:bean>

	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg name="decisionVoters"
			ref="roleVoter" />
	</beans:bean>

 
 
<!--  	<http authentication-manager-ref="jdbc-auth"
		access-decision-manager-ref="accessDecisionManager">	
		<intercept-url pattern="/api/**" access="Admin" />
			
			<http-basic/>
		
	</http>  -->
	
<!-- 	
		 <http authentication-manager-ref="jdbc-auth"
		access-decision-manager-ref="accessDecisionManager">	
		<form-login />
		<intercept-url pattern="/api/**" access="Admin" />
			
			<http-basic/>
		
	</http>  
  -->
 

 
	<http  authentication-manager-ref="jdbc-auth" 
		access-decision-manager-ref="accessDecisionManager">	
		
		
		<intercept-url pattern="/api/**" access="Admin" />
		 <intercept-url pattern="/getStudent/**" access="permitAll" />
		<form-login login-page="/login" authentication-failure-url="/denied"
			username-parameter="username" password-parameter="password"
			default-target-url="/home" />
			
			<logout invalidate-session="true" logout-success-url="/login"
			logout-url="/j_spring_security_logout" />
	
		<access-denied-handler error-page="/authorization"/>
		
		<session-management invalid-session-url="/login">
			<concurrency-control max-sessions="1"
				expired-url="/login" />
		</session-management>
			
			
		
	</http> 
	
	
	


<!-- Various authentication managers  || Starts || -->


	<authentication-manager id="in-memory-auth">
		<authentication-provider>
			<user-service>
				<user name="johny" password="secured_johny" authorities="Admin" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<authentication-manager id="dao-auth">
		<authentication-provider user-service-ref="userDetailsService">
		</authentication-provider>
	</authentication-manager>

	
	<authentication-manager id="jdbc-auth">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from students where username = ?"
				authorities-by-username-query="select username,role from roles where username = ?" />
		</authentication-provider>
	</authentication-manager>

	<!-- Postgres DB DataSource -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<beans:property name="driverClassName" value="org.postgresql.Driver" />
		<beans:property name="url"
			value="jdbc:postgresql://elmer.db.elephantsql.com:5432/yjebdrtx" />
		<beans:property name="username" value="yjebdrtx" />
		<beans:property name="password" value="VoCTvLMURklEYUeaJJH2vU_9fiZoDKoV" />
	</beans:bean>
	
	
	
<!-- Various authentication managers  || ENDS || -->

 
	
	<beans:bean id="userDetailsService"
		class="com.shadab.springweb.security.dao.AppUserDetailsServiceDAO" />
	
	
</beans:beans>
